knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(spatstat)
library(spatstat)
packages.install(spatstat)
install.packages("spatstat")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(spatstat)
install.packages(spatstat)
install.packages(spatstat)
install.packages("goftest")
install.packages("spatstat")
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
library(spatstat)
install.packages("spatstat.core")
library(spatstat)
library(spatstat.core)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
install.packages(spatstat.core)
install.packages(spatstat)
packages.install(spatstat.core)
packages.install(spatstat)
install.packages("spatstat")
packages.install(spatstat)
install.packages("spatstat")
library(spatstat)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
install.packages(kableExtra)
install.packages(kableExtra)
install.packages(kableExtra)
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
install.packages("systemfonts")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(systemfonts)
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
load("~/GitHub/Final/Full_dec5_1815.RData")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
# uses grid.arrange to organize indpendent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = FoodInspect, colour="red", size=0.1, show.legend = "point") +
labs(title= "Food Inspections, Chicago - 2018") +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = chicagoBoundary, fill = "grey80") +
stat_density2d(data = data.frame(st_coordinates(FoodInspect)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_viridis() +
scale_alpha(range = c(0.00, 0.35), guide = FALSE) +
labs(title = "Density of Food Inspections") +
mapTheme(title_size = 14) + theme(legend.position = "none"))
FoodInspect <- Food %>%
mutate(year = substr(inspection_date,1,4)) %>%
filter(year == "2018") %>%
filter(results=="Fail") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Food_Inspect")
FoodInspect <- Food %>%
mutate(year = substr(inspection_date,1,4)) %>%
filter(year == "2018") %>%
filter(results=="Fail") %>%
dplyr::select(Y = latitude, X = longitude) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(fishnet)) %>%
mutate(Legend = "Food_Inspect")
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = FoodInspect, colour="red", size=0.1, show.legend = "point") +
labs(title= "Failed Food Inspections, Chicago - 2018") +
mapTheme(title_size = 14),
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = FoodInspect, colour="red", size=0.1, show.legend = "point") +
labs(title= "Failed Food Inspections, Chicago - 2018") +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = chicagoBoundary, fill = "grey80") +
stat_density2d(data = data.frame(st_coordinates(FoodInspect)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_viridis() +
scale_alpha(range = c(0.00, 0.35), guide = FALSE) +
labs(title = "Density of Failed Food Inspections") +
mapTheme(title_size = 14) + theme(legend.position = "none"))
# Plot the fishnet displaying the count of inspection failures
ggplot() +
load("~/GitHub/Final/Full_dec12_1147.RData")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
load("~/GitHub/Final/Full_dec12_1147.RData")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
knitr::opts_chunk$set(echo = TRUE,
message = FALSE,
warning = FALSE,
include = TRUE,
cache = FALSE,
echo=TRUE)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
# Create a map containing boundary of Chicago.
chicagoBoundary <-
st_read(file.path(root.dir,"/Chapter5/chicagoBoundary.geojson")) %>%
st_transform('ESRI:102271')
# Create a fishnet containing 500 by 500 foot squares over the boundary of Chicago.
fishnet <-
st_make_grid(chicagoBoundary,
cellsize = 500,
square = TRUE) %>%
.[chicagoBoundary] %>%            # <- MDH Added
st_sf() %>%
mutate(uniqueID = rownames(.))
## Neighborhoods to use
neighborhoods <-
st_read("https://raw.githubusercontent.com/blackmad/neighborhoods/master/chicago.geojson") %>%
st_transform(st_crs(fishnet))
Food <-
read.socrata("https://data.cityofchicago.org/Health-Human-Services/Food-Inspections/4ijn-s7e5")
# uses grid.arrange to organize independent plots
grid.arrange(ncol=2,
ggplot() +
geom_sf(data = chicagoBoundary) +
geom_sf(data = FoodInspect, colour="red", size=0.1, show.legend = "point") +
labs(title= "Food Inspections, Chicago - 2018") +
mapTheme(title_size = 14),
ggplot() +
geom_sf(data = chicagoBoundary, fill = "grey80") +
stat_density2d(data = data.frame(st_coordinates(FoodInspect)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_viridis() +
scale_alpha(range = c(0.00, 0.35), guide = FALSE) +
labs(title = "Density of Food Inspections") +
mapTheme(title_size = 14) + theme(legend.position = "none"))
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList1 <- list()
for(i in vars){
mapList1[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i),
aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList1, ncol=3,
top="Risk Factors by Fishnet"))
vars_net <- rbind(rodentBait, sanitation311, ordinanceViolation, graffiti, liquorRetail, foodInspectFail, foodInspectLocations)   %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet, by = "uniqueID") %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList1 <- list()
for(i in vars){
mapList1[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i),
aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList1, ncol=3,
top="Risk Factors by Fishnet"))
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID, -name,-Sanitation_311, -Ordinance_Violations, -Graffiti, -Liquor_Retail, -Rodent_Bait, -Food_Inspect_Fail,  -Inspect.isSig.dist ) %>%
gather(Variable, Value, -countInspect)
# colnames(final_net)
# , foodInspectLocations, -Inspect.isSig,
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countInspect, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countInspect)) +
geom_point(size = 0.1) +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Failed inspection count as a function of risk factors") +
plotTheme()
## This is just for plotting
vars <- unique(final_net.localMorans$Variable)
varList2 <- list()
for(i in vars){
varList2[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList2, ncol = 4, top = "Local Morans I statistics, Inspect"))
ggplot() +
geom_sf(data = final_net, aes(fill=Inspect.isSig.dist), colour=NA) +
scale_fill_viridis(name="Inspect.isSig.dist") +
labs(title="NN Distance to Highly Significant \nFailed Inspect Clusters") +
mapTheme()
# cvID
# calculate errors by NEIGHBORHOOD
HistogramInspect <-
final_net %>%
group_by(uniqueID) %>%
summarize(countInspect_sum = sum(countInspect, na.rm = T),
countInspect_mean = mean(countInspect, na.rm = T)) %>%
ungroup()
# error_by_reg_and_fold %>%
#   arrange(desc(MAE))
# error_by_reg_and_fold %>%
#   arrange(MAE)
## plot histogram of theft
HistogramInspect %>%
ggplot(aes(countInspect_sum)) +
geom_histogram(bins = 30, colour="black", fill = "#FDE725FF") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
labs(title="Distribution of Failed Inspection Counts", subtitle = "Chicago, IL",
x="Theft Count", y="Count")
